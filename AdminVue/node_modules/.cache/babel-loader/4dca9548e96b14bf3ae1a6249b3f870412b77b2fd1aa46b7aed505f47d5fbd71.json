{"ast":null,"code":"import axios from 'axios';\nimport store from '@/store';\nimport { Message, MessageBox } from 'element-ui'; //导入element-ui组件库\n\n// 创建axios的对象\nconst instance = axios.create({\n  baseURL: \"http://localhost:8080\",\n  //配置固定域名\n  timeout: 5000\n});\n\n// 请求拦截\n// 所有的网络请求都会走这个方法,可以在请求添加自定义内容\ninstance.interceptors.request.use(function (config) {\n  if (config.method === 'post') {\n    config.data = {\n      ...config.data,\n      _t: Date.parse(new Date()) / 1000 // 时间戳\n    };\n  } else if (config.method === 'get') {\n    config.params = {\n      random: Math.random(),\n      // 随机数\n      ...config.params\n    };\n  }\n  config.headers.x_access_token = window.localStorage.getItem(\"token\"); // 请求头添加token值\n  return config;\n}, function (err) {\n  return Promise.request(err);\n});\n\n// 响应拦截\n// 此处可以根据服务器返回的状态码做相应的数据\ninstance.interceptors.response.use(function (response) {\n  const res = response;\n  if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\n    MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    }).then(() => {\n      store.dispatch('user/logout').then(() => {\n        store.commit(\"menu/setMenus\", []);\n        store.commit(\"menu/setRoutes\", []);\n        store.commit(\"menu/setDisplayMenus\", []);\n        store.commit(\"menu/setBtnMenus\", []);\n        location.reload();\n      });\n    });\n    return Promise.reject('error');\n  } else if (res.data.code == 1009) {\n    MessageBox.alert('该账号已被锁定', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    }).then(() => {\n      store.dispatch('user/logout').then(() => {\n        store.commit(\"menu/setMenus\", []);\n        store.commit(\"menu/setRoutes\", []);\n        store.commit(\"menu/setDisplayMenus\", []);\n        store.commit(\"menu/setBtnMenus\", []);\n        location.reload();\n      });\n    });\n    return Promise.reject('error');\n  } else if (res.status != 200) {\n    MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n      confirmButtonText: '确定',\n      type: 'error'\n    });\n    return Promise.reject('error');\n  } else {\n    return res.data;\n  }\n}, function (err) {\n  MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\n    confirmButtonText: '确定',\n    type: 'error'\n  });\n  return Promise.reject('error');\n});\n\n// 封装get和post请求\nexport function get(url, params) {\n  return instance.get(url, {\n    params\n  });\n}\nexport function post(url, data) {\n  return instance.post(url, data);\n}\nexport default instance;","map":{"version":3,"names":["axios","store","Message","MessageBox","instance","create","baseURL","timeout","interceptors","request","use","config","method","data","_t","Date","parse","params","random","Math","headers","x_access_token","window","localStorage","getItem","err","Promise","response","res","code","alert","confirmButtonText","type","then","dispatch","commit","location","reload","reject","status","get","url","post"],"sources":["D:/bishe/vegetable-sale/vegetable-sale-manage/src/utils/request.js"],"sourcesContent":["import axios from 'axios'\r\nimport store from '@/store'\r\nimport { Message, MessageBox } from 'element-ui'  //导入element-ui组件库\r\n \r\n// 创建axios的对象\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:8080\",  //配置固定域名\r\n    timeout: 5000\r\n})\r\n \r\n// 请求拦截\r\n// 所有的网络请求都会走这个方法,可以在请求添加自定义内容\r\ninstance.interceptors.request.use(\r\n    function (config) {\r\n        if (config.method === 'post') {\r\n            config.data = {\r\n              ...config.data,\r\n              _t: Date.parse(new Date()) / 1000 // 时间戳\r\n            }\r\n        } else if (config.method === 'get') {\r\n            config.params = {\r\n              random: Math.random(), // 随机数\r\n              ...config.params\r\n            }\r\n        }\r\n        config.headers.x_access_token = window.localStorage.getItem(\"token\") // 请求头添加token值\r\n        return config\r\n    },\r\n    function (err) {\r\n        return Promise.request(err)\r\n    }\r\n)\r\n \r\n// 响应拦截\r\n// 此处可以根据服务器返回的状态码做相应的数据\r\ninstance.interceptors.response.use(\r\n    function (response) {\r\n        const res = response\r\n        if (res.data.code === 1011 || res.data.code == 1008 || res.data.code == 1006) {\r\n            MessageBox.alert('系统登陆已过期，请重新登录', '错误', {\r\n                confirmButtonText: '确定',\r\n                type: 'error'\r\n            }).then(() => {\r\n                store.dispatch('user/logout').then(() => {\r\n                    store.commit(\"menu/setMenus\",[])\r\n                    store.commit(\"menu/setRoutes\",[])\r\n                    store.commit(\"menu/setDisplayMenus\",[])\r\n                    store.commit(\"menu/setBtnMenus\",[])\r\n                    location.reload()\r\n                })\r\n            })\r\n            return Promise.reject('error')\r\n        } else if(res.data.code == 1009) {\r\n            MessageBox.alert('该账号已被锁定', '错误', {\r\n                confirmButtonText: '确定',\r\n                type: 'error'\r\n            }).then(() => {\r\n                store.dispatch('user/logout').then(() => {\r\n                    store.commit(\"menu/setMenus\",[])\r\n                    store.commit(\"menu/setRoutes\",[])\r\n                    store.commit(\"menu/setDisplayMenus\",[])\r\n                    store.commit(\"menu/setBtnMenus\",[])\r\n                    location.reload()\r\n                })\r\n            })\r\n            return Promise.reject('error')\r\n        } else if (res.status != 200) {\r\n            MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\r\n                confirmButtonText: '确定',\r\n                type: 'error'\r\n            })\r\n            return Promise.reject('error')\r\n        } else {\r\n            return res.data\r\n        }\r\n    },\r\n    function (err) {\r\n        MessageBox.alert('系统内部错误，请联系管理员维护', '错误', {\r\n            confirmButtonText: '确定',\r\n            type: 'error'\r\n        })\r\n        return Promise.reject('error')\r\n    }\r\n)\r\n \r\n// 封装get和post请求\r\nexport function get(url, params) {\r\n    return instance.get(url, {params})\r\n}\r\n \r\nexport function post(url, data) {\r\n    return instance.post(url, data)\r\n}\r\n \r\nexport default instance;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}