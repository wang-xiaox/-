{"ast":null,"code":"import { changePassword } from \"../../api/api\";\nimport { mapState, mapGetters } from 'vuex';\nexport default {\n  name: \"main\",\n  data() {\n    return {\n      user: {},\n      oldPassword: \"\",\n      newPassword: \"\",\n      passwordDialogVisible: false\n    };\n  },\n  methods: {\n    handlePasswordClose() {\n      this.$bus.$emit('password', false);\n    },\n    passwordSubmit() {\n      var param = {\n        id: this.user.id,\n        password: this.oldPassword,\n        newPassword: this.newPassword\n      };\n      changePassword(param).then(res => {\n        if (res.code == 1000) {\n          this.$notify.success({\n            title: '成功',\n            message: \"密码修改成功\"\n          });\n          this.$bus.$emit('password', false);\n        } else {\n          this.$notify.error({\n            title: '错误',\n            message: res.message\n          });\n        }\n      });\n    },\n    // 根据fullUrl清除keepAlive\n    clearKeepAlive(fullUrl) {\n      this.$children.forEach(item => {\n        item.$children.forEach(child => {\n          if (child.$vnode.data.key == fullUrl) {\n            this._myDestory(child);\n          }\n        });\n      });\n    },\n    // 封装清除某个组件的keepAlive状态,并销毁\n    _myDestory(keepAliveComponent) {\n      // 你可以根据自己的业务更改此处的判断逻辑，酌情决定是否摧毁本层缓存。\n      if (keepAliveComponent.$vnode && keepAliveComponent.$vnode.data.keepAlive) {\n        if (keepAliveComponent.$vnode.parent && keepAliveComponent.$vnode.parent.componentInstance && keepAliveComponent.$vnode.parent.componentInstance.cache) {\n          if (keepAliveComponent.$vnode.componentOptions) {\n            var key = keepAliveComponent.$vnode.key == null ? keepAliveComponent.$vnode.componentOptions.Ctor.cid + (keepAliveComponent.$vnode.componentOptions.tag ? `::${keepAliveComponent.$vnode.componentOptions.tag}` : \"\") : keepAliveComponent.$vnode.key;\n            var cache = keepAliveComponent.$vnode.parent.componentInstance.cache;\n            var keys = keepAliveComponent.$vnode.parent.componentInstance.keys;\n            if (cache[key]) {\n              if (keys.length) {\n                var index = keys.indexOf(key);\n                if (index > -1) {\n                  keys.splice(index, 1);\n                }\n              }\n              delete cache[key];\n            }\n          }\n        }\n      }\n      keepAliveComponent.$destroy();\n    }\n  },\n  computed: {\n    fullPath() {\n      return this.$route.fullPath;\n    },\n    ...mapGetters('user', ['getUser'])\n  },\n  created() {},\n  mounted() {\n    // 注册监听全局的clearKeepAlive方法,可在其他组件中触发此方法\n    this.$bus.$on(\"clearKeepAlive\", this.clearKeepAlive);\n    // 监听collapse\n    this.$bus.$on('password', res => {\n      this.passwordDialogVisible = res;\n    });\n    this.user = JSON.parse(this.getUser);\n  }\n};","map":{"version":3,"names":["changePassword","mapState","mapGetters","name","data","user","oldPassword","newPassword","passwordDialogVisible","methods","handlePasswordClose","$bus","$emit","passwordSubmit","param","id","password","then","res","code","$notify","success","title","message","error","clearKeepAlive","fullUrl","$children","forEach","item","child","$vnode","key","_myDestory","keepAliveComponent","keepAlive","parent","componentInstance","cache","componentOptions","Ctor","cid","tag","keys","length","index","indexOf","splice","$destroy","computed","fullPath","$route","created","mounted","$on","JSON","parse","getUser"],"sources":["src/components/layout/main.vue"],"sourcesContent":["<template>\r\n    <el-main class=\"el-main\">\r\n      <el-dialog\r\n        title=\"修改密码\"\r\n        :visible.sync=\"passwordDialogVisible\"\r\n        width=\"30%\"\r\n        :before-close=\"handlePasswordClose\">\r\n        <span>请输入{{user.userName}}的旧密码：</span>\r\n        <el-input style=\"margin-top:10px\" show-password v-model=\"oldPassword\" size=\"mini\" autocomplete=\"off\"></el-input>\r\n        <span>请输入{{user.userName}}的新密码：</span>\r\n        <el-input style=\"margin-top:10px\" show-password v-model=\"newPassword\" size=\"mini\" autocomplete=\"off\"></el-input>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button size=\"mini\" @click=\"handlePasswordClose\">取 消</el-button>\r\n          <el-button size=\"mini\" type=\"primary\" @click=\"passwordSubmit\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n      <keep-alive max=10>\r\n      <router-view :key=\"fullPath\"></router-view>\r\n      </keep-alive>\r\n    </el-main>\r\n</template>\r\n\r\n<script>\r\n  import {changePassword} from \"../../api/api\"\r\n  import { mapState,mapGetters } from 'vuex'\r\n  export default {\r\n    name: \"main\",\r\n    data() {\r\n      return{\r\n        user: {},\r\n        oldPassword: \"\",\r\n        newPassword: \"\",\r\n        passwordDialogVisible: false,\r\n      }\r\n    },\r\n    methods: {\r\n      handlePasswordClose() {\r\n        this.$bus.$emit('password', false)\r\n      },\r\n      passwordSubmit() {\r\n        var param = {\r\n          id: this.user.id,\r\n          password: this.oldPassword,\r\n          newPassword: this.newPassword\r\n        }\r\n        changePassword(param).then(res => {\r\n          if(res.code == 1000) {\r\n            this.$notify.success({\r\n              title: '成功',\r\n              message: \"密码修改成功\"\r\n            });\r\n            this.$bus.$emit('password', false)\r\n          } else {\r\n            this.$notify.error({\r\n              title: '错误',\r\n              message: res.message\r\n            });\r\n          }\r\n        })\r\n      },\r\n      // 根据fullUrl清除keepAlive\r\n      clearKeepAlive(fullUrl) {\r\n        this.$children.forEach((item) => {\r\n          item.$children.forEach((child) => {\r\n            if (child.$vnode.data.key == fullUrl) {\r\n              this._myDestory(child);\r\n            }\r\n          })\r\n        });\r\n      },\r\n      // 封装清除某个组件的keepAlive状态,并销毁\r\n      _myDestory(keepAliveComponent) {\r\n        // 你可以根据自己的业务更改此处的判断逻辑，酌情决定是否摧毁本层缓存。\r\n        if (\r\n          keepAliveComponent.$vnode &&\r\n          keepAliveComponent.$vnode.data.keepAlive\r\n        ) {\r\n          if (\r\n            keepAliveComponent.$vnode.parent &&\r\n            keepAliveComponent.$vnode.parent.componentInstance &&\r\n            keepAliveComponent.$vnode.parent.componentInstance.cache\r\n          ) {\r\n            if (keepAliveComponent.$vnode.componentOptions) {\r\n              var key =\r\n                keepAliveComponent.$vnode.key == null\r\n                  ? keepAliveComponent.$vnode.componentOptions.Ctor.cid +\r\n                    (keepAliveComponent.$vnode.componentOptions.tag\r\n                      ? `::${keepAliveComponent.$vnode.componentOptions.tag}`\r\n                      : \"\")\r\n                  : keepAliveComponent.$vnode.key;\r\n              var cache = keepAliveComponent.$vnode.parent.componentInstance.cache;\r\n              var keys = keepAliveComponent.$vnode.parent.componentInstance.keys;\r\n              if (cache[key]) {\r\n                if (keys.length) {\r\n                  var index = keys.indexOf(key);\r\n                  if (index > -1) {\r\n                    keys.splice(index, 1);\r\n                  }\r\n                }\r\n                delete cache[key];\r\n              }\r\n            }\r\n          }\r\n        }\r\n        keepAliveComponent.$destroy();\r\n      },\r\n    },\r\n    computed: {\r\n      fullPath() {\r\n        return this.$route.fullPath;\r\n      },\r\n      ...mapGetters('user',['getUser'])\r\n    },\r\n    created() {\r\n     \r\n    },\r\n    mounted() {\r\n      // 注册监听全局的clearKeepAlive方法,可在其他组件中触发此方法\r\n      this.$bus.$on(\"clearKeepAlive\", this.clearKeepAlive);\r\n      // 监听collapse\r\n      this.$bus.$on('password', res=>{\r\n        this.passwordDialogVisible = res\r\n      })\r\n      this.user = JSON.parse(this.getUser)\r\n    }\r\n }\r\n</script>\r\n\r\n<style  scoped>\r\n    .el-main {\r\n        background-color: #F5F9FA;\r\n        overflow-y: scroll;\r\n        height: calc(100vh - 76px);\r\n        position: relative;\r\n    }\r\n    .el-main.el-main::-webkit-scrollbar {\r\n        width: 0px;\r\n        height: 0px;\r\n    }\r\n    .setting {\r\n      width:40px;\r\n      height: 40px;\r\n      position: fixed;\r\n      right: 0;\r\n      top: 150px;\r\n      z-index: 999;\r\n      border: 1px solid #DEDEDE;\r\n      border-radius: 10px;\r\n      overflow: hidden;\r\n    }\r\n</style>"],"mappings":"AAuBA,SAAAA,cAAA;AACA,SAAAC,QAAA,EAAAC,UAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,WAAA;MACAC,WAAA;MACAC,qBAAA;IACA;EACA;EACAC,OAAA;IACAC,oBAAA;MACA,KAAAC,IAAA,CAAAC,KAAA;IACA;IACAC,eAAA;MACA,IAAAC,KAAA;QACAC,EAAA,OAAAV,IAAA,CAAAU,EAAA;QACAC,QAAA,OAAAV,WAAA;QACAC,WAAA,OAAAA;MACA;MACAP,cAAA,CAAAc,KAAA,EAAAG,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAC,OAAA,CAAAC,OAAA;YACAC,KAAA;YACAC,OAAA;UACA;UACA,KAAAZ,IAAA,CAAAC,KAAA;QACA;UACA,KAAAQ,OAAA,CAAAI,KAAA;YACAF,KAAA;YACAC,OAAA,EAAAL,GAAA,CAAAK;UACA;QACA;MACA;IACA;IACA;IACAE,eAAAC,OAAA;MACA,KAAAC,SAAA,CAAAC,OAAA,CAAAC,IAAA;QACAA,IAAA,CAAAF,SAAA,CAAAC,OAAA,CAAAE,KAAA;UACA,IAAAA,KAAA,CAAAC,MAAA,CAAA3B,IAAA,CAAA4B,GAAA,IAAAN,OAAA;YACA,KAAAO,UAAA,CAAAH,KAAA;UACA;QACA;MACA;IACA;IACA;IACAG,WAAAC,kBAAA;MACA;MACA,IACAA,kBAAA,CAAAH,MAAA,IACAG,kBAAA,CAAAH,MAAA,CAAA3B,IAAA,CAAA+B,SAAA,EACA;QACA,IACAD,kBAAA,CAAAH,MAAA,CAAAK,MAAA,IACAF,kBAAA,CAAAH,MAAA,CAAAK,MAAA,CAAAC,iBAAA,IACAH,kBAAA,CAAAH,MAAA,CAAAK,MAAA,CAAAC,iBAAA,CAAAC,KAAA,EACA;UACA,IAAAJ,kBAAA,CAAAH,MAAA,CAAAQ,gBAAA;YACA,IAAAP,GAAA,GACAE,kBAAA,CAAAH,MAAA,CAAAC,GAAA,WACAE,kBAAA,CAAAH,MAAA,CAAAQ,gBAAA,CAAAC,IAAA,CAAAC,GAAA,IACAP,kBAAA,CAAAH,MAAA,CAAAQ,gBAAA,CAAAG,GAAA,GACA,KAAAR,kBAAA,CAAAH,MAAA,CAAAQ,gBAAA,CAAAG,GAAA,KACA,MACAR,kBAAA,CAAAH,MAAA,CAAAC,GAAA;YACA,IAAAM,KAAA,GAAAJ,kBAAA,CAAAH,MAAA,CAAAK,MAAA,CAAAC,iBAAA,CAAAC,KAAA;YACA,IAAAK,IAAA,GAAAT,kBAAA,CAAAH,MAAA,CAAAK,MAAA,CAAAC,iBAAA,CAAAM,IAAA;YACA,IAAAL,KAAA,CAAAN,GAAA;cACA,IAAAW,IAAA,CAAAC,MAAA;gBACA,IAAAC,KAAA,GAAAF,IAAA,CAAAG,OAAA,CAAAd,GAAA;gBACA,IAAAa,KAAA;kBACAF,IAAA,CAAAI,MAAA,CAAAF,KAAA;gBACA;cACA;cACA,OAAAP,KAAA,CAAAN,GAAA;YACA;UACA;QACA;MACA;MACAE,kBAAA,CAAAc,QAAA;IACA;EACA;EACAC,QAAA;IACAC,SAAA;MACA,YAAAC,MAAA,CAAAD,QAAA;IACA;IACA,GAAAhD,UAAA;EACA;EACAkD,QAAA,GAEA;EACAC,QAAA;IACA;IACA,KAAA1C,IAAA,CAAA2C,GAAA,wBAAA7B,cAAA;IACA;IACA,KAAAd,IAAA,CAAA2C,GAAA,aAAApC,GAAA;MACA,KAAAV,qBAAA,GAAAU,GAAA;IACA;IACA,KAAAb,IAAA,GAAAkD,IAAA,CAAAC,KAAA,MAAAC,OAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}