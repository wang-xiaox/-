{"ast":null,"code":"import router from './router';\nimport store from './store';\nimport { Message } from 'element-ui';\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\nimport { getToken } from '@/utils/token';\nNProgress.configure({\n  showSpinner: false\n});\nconst whiteList = ['/login', '/register'];\nrouter.beforeEach((to, from, next) => {\n  NProgress.start();\n  if (getToken()) {\n    if (to.path === '/login') {\n      next({\n        path: '/'\n      });\n      NProgress.done();\n    } else {\n      //这里就要开始构造动态路由和前端权限了\n      //如果还没有获取菜单权限先请求获取\n      if (store.getters['menu/getMenu'].length == 0) {\n        store.dispatch('menu/generateRoutes').then(accessRoutes => {\n          // 根据roles权限生成可访问的路由表\n          router.addRoutes(accessRoutes); // 动态添加可访问路由表\n          next({\n            ...to,\n            replace: true\n          }); // hack方法 确保addRoutes已完成\n        }).catch(err => {\n          next({\n            path: '/'\n          });\n          // store.dispatch('LogOut').then(() => {\n          //     Message.error(err)\n          //     next({ path: '/' })\n          // })\n        });\n      } else {\n        next();\n      }\n    }\n  } else {\n    // 没有token\n    if (whiteList.indexOf(to.path) !== -1) {\n      // 在免登录白名单，直接进入\n      next();\n    } else {\n      next(`/login?redirect=${to.fullPath}`); // 否则全部重定向到登录页\n      NProgress.done();\n    }\n  }\n});\nrouter.afterEach(() => {\n  NProgress.done();\n});","map":{"version":3,"names":["router","store","Message","NProgress","getToken","configure","showSpinner","whiteList","beforeEach","to","from","next","start","path","done","getters","length","dispatch","then","accessRoutes","addRoutes","replace","catch","err","indexOf","fullPath","afterEach"],"sources":["D:/vue_project/back_stage_front/src/permission.js"],"sourcesContent":["import router from './router'\r\nimport store from './store'\r\nimport { Message } from 'element-ui'\r\nimport NProgress from 'nprogress'\r\nimport 'nprogress/nprogress.css'\r\nimport { getToken } from '@/utils/token'\r\n\r\nNProgress.configure({ showSpinner: false })\r\n\r\nconst whiteList = ['/login', '/register']\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    NProgress.start()\r\n    if(getToken()) {\r\n        if (to.path === '/login') {\r\n            next({ path: '/' })\r\n            NProgress.done()\r\n        } else {\r\n            //这里就要开始构造动态路由和前端权限了\r\n            //如果还没有获取菜单权限先请求获取\r\n            if(store.getters['menu/getMenu'].length == 0) {\r\n                store.dispatch('menu/generateRoutes').then(accessRoutes => {\r\n                    // 根据roles权限生成可访问的路由表\r\n                    router.addRoutes(accessRoutes) // 动态添加可访问路由表\r\n                    next({ ...to, replace: true }) // hack方法 确保addRoutes已完成\r\n                }).catch(err => {\r\n                    next({ path: '/' })\r\n                    // store.dispatch('LogOut').then(() => {\r\n                    //     Message.error(err)\r\n                    //     next({ path: '/' })\r\n                    // })\r\n                })\r\n            } else {\r\n                next()\r\n            }\r\n        }\r\n    } else {\r\n        // 没有token\r\n        if (whiteList.indexOf(to.path) !== -1) {\r\n            // 在免登录白名单，直接进入\r\n            next()\r\n        } else {\r\n            next(`/login?redirect=${to.fullPath}`) // 否则全部重定向到登录页\r\n            NProgress.done()\r\n        }\r\n    }\r\n})\r\n\r\nrouter.afterEach(() => {\r\n    NProgress.done()\r\n})"],"mappings":"AAAA,OAAOA,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAO,yBAAyB;AAChC,SAASC,QAAQ,QAAQ,eAAe;AAExCD,SAAS,CAACE,SAAS,CAAC;EAAEC,WAAW,EAAE;AAAM,CAAC,CAAC;AAE3C,MAAMC,SAAS,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC;AAEzCP,MAAM,CAACQ,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClCR,SAAS,CAACS,KAAK,EAAE;EACjB,IAAGR,QAAQ,EAAE,EAAE;IACX,IAAIK,EAAE,CAACI,IAAI,KAAK,QAAQ,EAAE;MACtBF,IAAI,CAAC;QAAEE,IAAI,EAAE;MAAI,CAAC,CAAC;MACnBV,SAAS,CAACW,IAAI,EAAE;IACpB,CAAC,MAAM;MACH;MACA;MACA,IAAGb,KAAK,CAACc,OAAO,CAAC,cAAc,CAAC,CAACC,MAAM,IAAI,CAAC,EAAE;QAC1Cf,KAAK,CAACgB,QAAQ,CAAC,qBAAqB,CAAC,CAACC,IAAI,CAACC,YAAY,IAAI;UACvD;UACAnB,MAAM,CAACoB,SAAS,CAACD,YAAY,CAAC,EAAC;UAC/BR,IAAI,CAAC;YAAE,GAAGF,EAAE;YAAEY,OAAO,EAAE;UAAK,CAAC,CAAC,EAAC;QACnC,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;UACZZ,IAAI,CAAC;YAAEE,IAAI,EAAE;UAAI,CAAC,CAAC;UACnB;UACA;UACA;UACA;QACJ,CAAC,CAAC;MACN,CAAC,MAAM;QACHF,IAAI,EAAE;MACV;IACJ;EACJ,CAAC,MAAM;IACH;IACA,IAAIJ,SAAS,CAACiB,OAAO,CAACf,EAAE,CAACI,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;MACnC;MACAF,IAAI,EAAE;IACV,CAAC,MAAM;MACHA,IAAI,CAAE,mBAAkBF,EAAE,CAACgB,QAAS,EAAC,CAAC,EAAC;MACvCtB,SAAS,CAACW,IAAI,EAAE;IACpB;EACJ;AACJ,CAAC,CAAC;AAEFd,MAAM,CAAC0B,SAAS,CAAC,MAAM;EACnBvB,SAAS,CAACW,IAAI,EAAE;AACpB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}