{"ast":null,"code":"import { saveSysKnowledges, getSysKnowledgeTypeList, getSysKnowledgeAssortList } from '../../../api/api';\nexport default {\n  data() {\n    return {\n      type: [],\n      assort: [],\n      formLabelWidth: '80px',\n      form: {\n        title: \"\",\n        type: \"\",\n        assort: \"\",\n        content: \"\"\n      },\n      rules: {\n        title: [{\n          required: true,\n          message: '请输入标题',\n          trigger: 'blur'\n        }],\n        type: [{\n          required: true,\n          message: '请输入类型',\n          trigger: 'blur'\n        }],\n        assort: [{\n          required: true,\n          message: '请输入分类',\n          trigger: 'blur'\n        }],\n        content: [{\n          required: true,\n          message: '请输入内容',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  props: ['addVisible'],\n  methods: {\n    getSysKnowledgeTypeList() {\n      getSysKnowledgeTypeList().then(res => {\n        if (res.code == 1000) {\n          this.type = res.data;\n        }\n      });\n    },\n    getSysKnowledgeAssortList() {\n      getSysKnowledgeAssortList().then(res => {\n        if (res.code == 1000) {\n          this.assort = res.data;\n        }\n      });\n    },\n    submit() {\n      this.$refs[\"ruleForm\"].validate(valid => {\n        if (valid) {\n          saveSysKnowledges(this.form).then(res => {\n            if (res.code == 1000) {\n              this.$notify.success({\n                title: '成功',\n                message: \"保存成功\"\n              });\n              this.handleClose();\n            } else {\n              this.$notify.error({\n                title: '错误',\n                message: res.message\n              });\n            }\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    handleClose() {\n      this.form = {\n        title: \"\",\n        type: \"\",\n        assort: \"\",\n        content: \"\"\n      }, this.$emit(\"addFalse\");\n    }\n  },\n  created() {},\n  mounted() {\n    this.getSysKnowledgeTypeList();\n    this.getSysKnowledgeAssortList();\n  }\n};","map":{"version":3,"names":["saveSysKnowledges","getSysKnowledgeTypeList","getSysKnowledgeAssortList","data","type","assort","formLabelWidth","form","title","content","rules","required","message","trigger","props","methods","then","res","code","submit","$refs","validate","valid","$notify","success","handleClose","error","$emit","created","mounted"],"sources":["src/components/system/knowledge/addKnowledge.vue"],"sourcesContent":["<template>\r\n<div>\r\n  <el-dialog title=\"新增法律知识\" width=\"40%\" :destroy-on-close=\"true\" :visible.sync=\"addVisible\" :before-close=\"handleClose\">\r\n    <el-form :model=\"form\" :rules=\"rules\" ref=\"ruleForm\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                标题:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n              <el-form-item prop=\"title\" style=\"margin-bottom:0\">\r\n                  <el-input v-model=\"form.title\" size=\"mini\" placeholder=\"请输入标题\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                类型:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n              <el-form-item prop=\"type\" style=\"margin-bottom:0\">\r\n                  <el-select size=\"mini\" v-model=\"form.type\" placeholder=\"请选择知识类型\">\r\n                    <el-option v-for=\"(item,index) in type\" :key=\"index\" :label=\"item.name\" :value=\"item.name\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                分类:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n              <el-form-item prop=\"assort\" style=\"margin-bottom:0\">\r\n                  <el-select size=\"mini\" v-model=\"form.assort\" placeholder=\"请选择知识分类\">\r\n                    <el-option v-for=\"(item,index) in assort\" :key=\"index\" :label=\"item.type\" :value=\"item.name\"></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n            </div>\r\n        </el-col>\r\n        <el-col :xs=\"24\" :sm=\"24\" :md=\"24\" :lg=\"24\" :xl=\"24\">\r\n            <span class=\"search-title\">\r\n                内容:\r\n                </span>\r\n            <div style=\"width:100%\">\r\n              <el-form-item prop=\"content\" style=\"margin-bottom:0\">\r\n                  <el-input v-model=\"form.content\" size=\"mini\" placeholder=\"请输入内容\" autocomplete=\"off\"></el-input>\r\n              </el-form-item>\r\n            </div>\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n    <div slot=\"footer\" class=\"dialog-footer\">\r\n      <el-button size=\"mini\" type=\"primary\" @click=\"submit\">确 定</el-button>\r\n      <el-button size=\"mini\" @click=\"handleClose\">取 消</el-button>\r\n    </div>\r\n  </el-dialog>\r\n</div>\r\n</template>\r\n\r\n<script>\r\n  import {saveSysKnowledges,getSysKnowledgeTypeList,getSysKnowledgeAssortList} from '../../../api/api'\r\n  export default {\r\n    data() {\r\n      return{\r\n        type: [],\r\n        assort: [],\r\n        formLabelWidth: '80px',\r\n        form: {\r\n          title: \"\",\r\n          type: \"\",\r\n          assort: \"\",\r\n          content: \"\",\r\n        },\r\n        rules: {\r\n          title: [\r\n            { required: true, message: '请输入标题', trigger: 'blur' },\r\n          ],\r\n          type: [\r\n            { required: true, message: '请输入类型', trigger: 'blur' },\r\n          ],\r\n          assort: [\r\n            { required: true, message: '请输入分类', trigger: 'blur' },\r\n          ],\r\n          content: [\r\n            { required: true, message: '请输入内容', trigger: 'blur' },\r\n          ],\r\n        },\r\n      }\r\n    },\r\n    props: ['addVisible'],\r\n    methods: {\r\n      getSysKnowledgeTypeList() {\r\n        getSysKnowledgeTypeList().then(res => {\r\n          if (res.code == 1000) {\r\n            this.type = res.data\r\n          }\r\n        })\r\n      },\r\n      getSysKnowledgeAssortList() {\r\n        getSysKnowledgeAssortList().then(res => {\r\n          if (res.code == 1000) {\r\n            this.assort = res.data\r\n          }\r\n        })\r\n      },\r\n      submit() {\r\n        this.$refs[\"ruleForm\"].validate((valid) => {\r\n          if (valid) {\r\n            saveSysKnowledges(this.form).then(res => {\r\n              if(res.code == 1000) {\r\n                this.$notify.success({\r\n                  title: '成功',\r\n                  message: \"保存成功\"\r\n                });\r\n                this.handleClose();\r\n              } else {\r\n                this.$notify.error({\r\n                  title: '错误',\r\n                  message: res.message\r\n                });\r\n              }\r\n            })\r\n          } else {\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      handleClose() {\r\n        this.form = {\r\n          title: \"\",\r\n          type: \"\",\r\n          assort: \"\",\r\n          content: \"\",\r\n        },\r\n        this.$emit(\"addFalse\")\r\n      },\r\n     \r\n    },\r\n    created() {\r\n     \r\n    },\r\n    mounted() {\r\n      this.getSysKnowledgeTypeList()\r\n      this.getSysKnowledgeAssortList()\r\n    }\r\n }\r\n</script>\r\n\r\n<style lang=scss scoped>\r\n  .el-col {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      margin-top: 24px\r\n  }\r\n  .search-title {\r\n      font-family: '黑体';\r\n      float: right;\r\n      white-space: nowrap;\r\n      font-size: 14px;\r\n      width: 84px;\r\n      text-align: right;\r\n  }\r\n  .el-tree {\r\n      border: 1px solid #BDC1C9;\r\n  }\r\n</style>"],"mappings":"AA4DA,SAAAA,iBAAA,EAAAC,uBAAA,EAAAC,yBAAA;AACA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,MAAA;MACAC,cAAA;MACAC,IAAA;QACAC,KAAA;QACAJ,IAAA;QACAC,MAAA;QACAI,OAAA;MACA;MACAC,KAAA;QACAF,KAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAT,IAAA,GACA;UAAAO,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAR,MAAA,GACA;UAAAM,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,OAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,KAAA;EACAC,OAAA;IACAd,wBAAA;MACAA,uBAAA,GAAAe,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAd,IAAA,GAAAa,GAAA,CAAAd,IAAA;QACA;MACA;IACA;IACAD,0BAAA;MACAA,yBAAA,GAAAc,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAC,IAAA;UACA,KAAAb,MAAA,GAAAY,GAAA,CAAAd,IAAA;QACA;MACA;IACA;IACAgB,OAAA;MACA,KAAAC,KAAA,aAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACAtB,iBAAA,MAAAO,IAAA,EAAAS,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAC,IAAA;cACA,KAAAK,OAAA,CAAAC,OAAA;gBACAhB,KAAA;gBACAI,OAAA;cACA;cACA,KAAAa,WAAA;YACA;cACA,KAAAF,OAAA,CAAAG,KAAA;gBACAlB,KAAA;gBACAI,OAAA,EAAAK,GAAA,CAAAL;cACA;YACA;UACA;QACA;UACA;QACA;MACA;IACA;IACAa,YAAA;MACA,KAAAlB,IAAA;QACAC,KAAA;QACAJ,IAAA;QACAC,MAAA;QACAI,OAAA;MACA,GACA,KAAAkB,KAAA;IACA;EAEA;EACAC,QAAA,GAEA;EACAC,QAAA;IACA,KAAA5B,uBAAA;IACA,KAAAC,yBAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}